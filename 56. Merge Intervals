class Solution {
    public int[][] merge(int[][] intervals) {
        if(intervals.length == 0) return intervals;
        List<int[]> res = new ArrayList<>();
        Arrays.sort(intervals, (item1, item2) -> item1[0] - item2[0]);
        int[] list = new int[2];
        res.add(new int[]{intervals[0][0],intervals[0][1]});
        for(int i = 1; i < intervals.length; i++){
            int[] lastitem = res.get(res.size() - 1);
            //如果最后一项的第二项小于要插入项的第一项，直接将这一项插入
            if(lastitem[1] < intervals[i][0]){
                res.add(new int[]{intervals[i][0],intervals[i][1]});
            //如果最后一项的第二项小于要插入项的第二项，将最后一项的第二项改为要插入项的第二项
            }else if(lastitem[1] < intervals[i][1]){
                lastitem[1] = intervals[i][1];
            }
        }
        return res.toArray(new int[res.size()][2]);
    }
}
